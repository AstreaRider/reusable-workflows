name: Docker Continous Integration

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      DOCKER_REGISTRY_URL:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: true
        type: string
      REPOSITORY_NAME:
        required: true
        type: string
      REPOSITORY_OWNER:
        required: true
        type: string
    secrets:
      DOCKER_REGISTRY_USERNAME:
        description: 'Your Private Registry Username'
        required: true
      DOCKER_REGISTRY_PASSWORD:
        description: 'Your Private Registry Password'
        required: true
      GH_PAT:
        description: 'Your GitHub PAT'
        required: true
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout Repo
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.REPOSITORY_OWNER}}/${{ inputs.REPOSITORY_NAME }}
          token: ${{ secrets.GH_PAT }}

      # Login Docker 
      - name: login to ${{ inputs.DOCKER_REGISTRY_URL }}
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}   

      # Docker Image Meta Data
      - name: ${{ inputs.WORKING_DIRECTORY }} docker image meta data
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.DOCKER_REGISTRY_URL }}/${{ inputs.REPOSITORY_NAME}}/${{ inputs.WORKING_DIRECTORY }}
          tags: type=raw,value=latest,enable={{is_default_branch}} 
      
      # Build and Push Docker Image
      - name: build and push docker image ${{ inputs.WORKING_DIRECTORY }}
        uses: docker/build-push-action@v3
        with:
          context: ./${{ inputs.WORKING_DIRECTORY }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        
      # Delete Docker Image
      - name: Delete docker images ${{ inputs.WORKING_DIRECTORY }} after build & push
        run: |
          docker rmi ${{ steps.meta.outputs.tags }}
          docker system prune --force